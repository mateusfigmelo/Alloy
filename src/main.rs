// mod comparison;
// mod conversion;
// mod create_instance;
// mod deploy_from_artifacts;
// mod deploy_from_bytecode;
// mod gas_filler;
// mod handling_unknown_return_types;
// mod interact_with_abi;
// mod interact_with_contract_instance;
// mod logging_layer;
// mod math_operations;
// mod math_utilities;
// mod node_bindings;
// mod nonce_filler;
// mod provider;
// mod recommended_filler;
// mod wallet_filler;
mod query;

fn main() {
    // comparison::main();
    // let _ = conversion::main();
    // let _ = create_instance::main();
    // let _ = math_operations::main();
    // let _ = math_utilities::main();
    // let _ = deploy_from_artifacts::main();
    // let _ = deploy_from_bytecode::main();
    // let _ = interact_with_abi::main();
    // let _ = interact_with_contract_instance::main();
    // let _ = handling_unknown_return_types::main();
    // let _ = gas_filler::main();
    // let _ = nonce_filler::main();
    // let _ = recommended_filler::main();
    // let _ = wallet_filler::main();
    // let _ = logging_layer::main();
    // let _ = node_bindings::deploy_contract_on_local_anvil_instance::main();
    // let _ = node_bindings::anvil_fork_instance::main();
    // let _ = node_bindings::anvil_fork_provider::main();
    // let _ = node_bindings::anvil_local_instance::main();
    // let _ = node_bindings::anvil_local_provider::main();
    // let _ = node_bindings::geth_local_instance::main();
    // let _ = provider::builder::main();
    // let _ = provider::builtin::main();
    // let _ = provider::http::main();
    // let _ = provider::ws::main();
    let _ = query::contract_storage::main();
    let _ = query::query_logs::main();
}
